//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WebApplication1.ws1 {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SOAPEP", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback authUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback authUser64OperationCompleted;
        
        private System.Threading.SendOrPostCallback cekAttendance1OperationCompleted;
        
        private System.Threading.SendOrPostCallback subAttendance1OperationCompleted;
        
        private System.Threading.SendOrPostCallback cekCico1OperationCompleted;
        
        private System.Threading.SendOrPostCallback cekCico2OperationCompleted;
        
        private System.Threading.SendOrPostCallback subCico1OperationCompleted;
        
        private System.Threading.SendOrPostCallback ApprovalMedTrx1OperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmpDP1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListTrxMed1OperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTicketHDOperationCompleted;
        
        private System.Threading.SendOrPostCallback submit2approval1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmpProfile1OperationCompleted;
        
        private System.Threading.SendOrPostCallback validDateCICO1OperationCompleted;
        
        private System.Threading.SendOrPostCallback cekOnleave1OperationCompleted;
        
        private System.Threading.SendOrPostCallback getDateServ1OperationCompleted;
        
        private System.Threading.SendOrPostCallback subCicofg1OperationCompleted;
        
        private System.Threading.SendOrPostCallback validFGOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastActCICOWFH1OperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckEmployeeLocationSOAP1OperationCompleted;
        
        private System.Threading.SendOrPostCallback cekCicoWFH1OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::WebApplication1.Properties.Settings.Default.WebApplication1_ws1_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event authUserCompletedEventHandler authUserCompleted;
        
        /// <remarks/>
        public event authUser64CompletedEventHandler authUser64Completed;
        
        /// <remarks/>
        public event cekAttendance1CompletedEventHandler cekAttendance1Completed;
        
        /// <remarks/>
        public event subAttendance1CompletedEventHandler subAttendance1Completed;
        
        /// <remarks/>
        public event cekCico1CompletedEventHandler cekCico1Completed;
        
        /// <remarks/>
        public event cekCico2CompletedEventHandler cekCico2Completed;
        
        /// <remarks/>
        public event subCico1CompletedEventHandler subCico1Completed;
        
        /// <remarks/>
        public event ApprovalMedTrx1CompletedEventHandler ApprovalMedTrx1Completed;
        
        /// <remarks/>
        public event getEmpDP1CompletedEventHandler getEmpDP1Completed;
        
        /// <remarks/>
        public event GetListTrxMed1CompletedEventHandler GetListTrxMed1Completed;
        
        /// <remarks/>
        public event CreateTicketHDCompletedEventHandler CreateTicketHDCompleted;
        
        /// <remarks/>
        public event submit2approval1CompletedEventHandler submit2approval1Completed;
        
        /// <remarks/>
        public event GetEmpProfile1CompletedEventHandler GetEmpProfile1Completed;
        
        /// <remarks/>
        public event validDateCICO1CompletedEventHandler validDateCICO1Completed;
        
        /// <remarks/>
        public event cekOnleave1CompletedEventHandler cekOnleave1Completed;
        
        /// <remarks/>
        public event getDateServ1CompletedEventHandler getDateServ1Completed;
        
        /// <remarks/>
        public event subCicofg1CompletedEventHandler subCicofg1Completed;
        
        /// <remarks/>
        public event validFGCompletedEventHandler validFGCompleted;
        
        /// <remarks/>
        public event GetLastActCICOWFH1CompletedEventHandler GetLastActCICOWFH1Completed;
        
        /// <remarks/>
        public event CheckEmployeeLocationSOAP1CompletedEventHandler CheckEmployeeLocationSOAP1Completed;
        
        /// <remarks/>
        public event cekCicoWFH1CompletedEventHandler cekCicoWFH1Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/soapserv/authUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void authUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pwd, out bool authUserResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool authUserResultSpecified) {
            object[] results = this.Invoke("authUser", new object[] {
                        username,
                        pwd});
            authUserResult = ((bool)(results[0]));
            authUserResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void authUserAsync(string username, string pwd) {
            this.authUserAsync(username, pwd, null);
        }
        
        /// <remarks/>
        public void authUserAsync(string username, string pwd, object userState) {
            if ((this.authUserOperationCompleted == null)) {
                this.authUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthUserOperationCompleted);
            }
            this.InvokeAsync("authUser", new object[] {
                        username,
                        pwd}, this.authUserOperationCompleted, userState);
        }
        
        private void OnauthUserOperationCompleted(object arg) {
            if ((this.authUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authUserCompleted(this, new authUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/soapserv/authUser64", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void authUser64([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pwd, out bool authUser64Result, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool authUser64ResultSpecified) {
            object[] results = this.Invoke("authUser64", new object[] {
                        username,
                        pwd});
            authUser64Result = ((bool)(results[0]));
            authUser64ResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void authUser64Async(string username, string pwd) {
            this.authUser64Async(username, pwd, null);
        }
        
        /// <remarks/>
        public void authUser64Async(string username, string pwd, object userState) {
            if ((this.authUser64OperationCompleted == null)) {
                this.authUser64OperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthUser64OperationCompleted);
            }
            this.InvokeAsync("authUser64", new object[] {
                        username,
                        pwd}, this.authUser64OperationCompleted, userState);
        }
        
        private void OnauthUser64OperationCompleted(object arg) {
            if ((this.authUser64Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authUser64Completed(this, new authUser64CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/soapserv/cekAttendance1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void cekAttendance1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nrp, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string datefrom, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dateto, out bool cekAttendance1Result, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool cekAttendance1ResultSpecified) {
            object[] results = this.Invoke("cekAttendance1", new object[] {
                        nrp,
                        datefrom,
                        dateto});
            cekAttendance1Result = ((bool)(results[0]));
            cekAttendance1ResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void cekAttendance1Async(string nrp, string datefrom, string dateto) {
            this.cekAttendance1Async(nrp, datefrom, dateto, null);
        }
        
        /// <remarks/>
        public void cekAttendance1Async(string nrp, string datefrom, string dateto, object userState) {
            if ((this.cekAttendance1OperationCompleted == null)) {
                this.cekAttendance1OperationCompleted = new System.Threading.SendOrPostCallback(this.OncekAttendance1OperationCompleted);
            }
            this.InvokeAsync("cekAttendance1", new object[] {
                        nrp,
                        datefrom,
                        dateto}, this.cekAttendance1OperationCompleted, userState);
        }
        
        private void OncekAttendance1OperationCompleted(object arg) {
            if ((this.cekAttendance1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cekAttendance1Completed(this, new cekAttendance1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/soapserv/subAttendance1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void subAttendance1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nrp, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dateattend, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string timefrom, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string timeto, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string attendcode, out bool subAttendance1Result, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool subAttendance1ResultSpecified) {
            object[] results = this.Invoke("subAttendance1", new object[] {
                        nrp,
                        dateattend,
                        timefrom,
                        timeto,
                        attendcode});
            subAttendance1Result = ((bool)(results[0]));
            subAttendance1ResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void subAttendance1Async(string nrp, string dateattend, string timefrom, string timeto, string attendcode) {
            this.subAttendance1Async(nrp, dateattend, timefrom, timeto, attendcode, null);
        }
        
        /// <remarks/>
        public void subAttendance1Async(string nrp, string dateattend, string timefrom, string timeto, string attendcode, object userState) {
            if ((this.subAttendance1OperationCompleted == null)) {
                this.subAttendance1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubAttendance1OperationCompleted);
            }
            this.InvokeAsync("subAttendance1", new object[] {
                        nrp,
                        dateattend,
                        timefrom,
                        timeto,
                        attendcode}, this.subAttendance1OperationCompleted, userState);
        }
        
        private void OnsubAttendance1OperationCompleted(object arg) {
            if ((this.subAttendance1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subAttendance1Completed(this, new subAttendance1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/soapserv/cekCico1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void cekCico1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nrp, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string datefrom, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string type, out bool cekCico1Result, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool cekCico1ResultSpecified) {
            object[] results = this.Invoke("cekCico1", new object[] {
                        nrp,
                        datefrom,
                        type});
            cekCico1Result = ((bool)(results[0]));
            cekCico1ResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void cekCico1Async(string nrp, string datefrom, string type) {
            this.cekCico1Async(nrp, datefrom, type, null);
        }
        
        /// <remarks/>
        public void cekCico1Async(string nrp, string datefrom, string type, object userState) {
            if ((this.cekCico1OperationCompleted == null)) {
                this.cekCico1OperationCompleted = new System.Threading.SendOrPostCallback(this.OncekCico1OperationCompleted);
            }
            this.InvokeAsync("cekCico1", new object[] {
                        nrp,
                        datefrom,
                        type}, this.cekCico1OperationCompleted, userState);
        }
        
        private void OncekCico1OperationCompleted(object arg) {
            if ((this.cekCico1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cekCico1Completed(this, new cekCico1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/soapserv/cekCico2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void cekCico2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nrp, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string datefrom, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string type, out bool cekCico2Result, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool cekCico2ResultSpecified) {
            object[] results = this.Invoke("cekCico2", new object[] {
                        nrp,
                        datefrom,
                        type});
            cekCico2Result = ((bool)(results[0]));
            cekCico2ResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void cekCico2Async(string nrp, string datefrom, string type) {
            this.cekCico2Async(nrp, datefrom, type, null);
        }
        
        /// <remarks/>
        public void cekCico2Async(string nrp, string datefrom, string type, object userState) {
            if ((this.cekCico2OperationCompleted == null)) {
                this.cekCico2OperationCompleted = new System.Threading.SendOrPostCallback(this.OncekCico2OperationCompleted);
            }
            this.InvokeAsync("cekCico2", new object[] {
                        nrp,
                        datefrom,
                        type}, this.cekCico2OperationCompleted, userState);
        }
        
        private void OncekCico2OperationCompleted(object arg) {
            if ((this.cekCico2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cekCico2Completed(this, new cekCico2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/soapserv/subCico1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void subCico1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nrp, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string datefrom, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string timefrom, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string type, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string reason, out bool subCico1Result, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool subCico1ResultSpecified) {
            object[] results = this.Invoke("subCico1", new object[] {
                        nrp,
                        datefrom,
                        timefrom,
                        type,
                        reason});
            subCico1Result = ((bool)(results[0]));
            subCico1ResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void subCico1Async(string nrp, string datefrom, string timefrom, string type, string reason) {
            this.subCico1Async(nrp, datefrom, timefrom, type, reason, null);
        }
        
        /// <remarks/>
        public void subCico1Async(string nrp, string datefrom, string timefrom, string type, string reason, object userState) {
            if ((this.subCico1OperationCompleted == null)) {
                this.subCico1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubCico1OperationCompleted);
            }
            this.InvokeAsync("subCico1", new object[] {
                        nrp,
                        datefrom,
                        timefrom,
                        type,
                        reason}, this.subCico1OperationCompleted, userState);
        }
        
        private void OnsubCico1OperationCompleted(object arg) {
            if ((this.subCico1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subCico1Completed(this, new subCico1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/soapserv/ApprovalMedTrx1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApprovalMedTrx1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string refcodemed, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string stepid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nrp, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string status, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string reasonRej, out bool ApprovalMedTrx1Result, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool ApprovalMedTrx1ResultSpecified) {
            object[] results = this.Invoke("ApprovalMedTrx1", new object[] {
                        refcodemed,
                        stepid,
                        nrp,
                        status,
                        reasonRej});
            ApprovalMedTrx1Result = ((bool)(results[0]));
            ApprovalMedTrx1ResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void ApprovalMedTrx1Async(string refcodemed, string stepid, string nrp, string status, string reasonRej) {
            this.ApprovalMedTrx1Async(refcodemed, stepid, nrp, status, reasonRej, null);
        }
        
        /// <remarks/>
        public void ApprovalMedTrx1Async(string refcodemed, string stepid, string nrp, string status, string reasonRej, object userState) {
            if ((this.ApprovalMedTrx1OperationCompleted == null)) {
                this.ApprovalMedTrx1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnApprovalMedTrx1OperationCompleted);
            }
            this.InvokeAsync("ApprovalMedTrx1", new object[] {
                        refcodemed,
                        stepid,
                        nrp,
                        status,
                        reasonRej}, this.ApprovalMedTrx1OperationCompleted, userState);
        }
        
        private void OnApprovalMedTrx1OperationCompleted(object arg) {
            if ((this.ApprovalMedTrx1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApprovalMedTrx1Completed(this, new ApprovalMedTrx1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/soapserv/getEmpDP1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getEmpDP1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string emailadd) {
            object[] results = this.Invoke("getEmpDP1", new object[] {
                        emailadd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEmpDP1Async(string emailadd) {
            this.getEmpDP1Async(emailadd, null);
        }
        
        /// <remarks/>
        public void getEmpDP1Async(string emailadd, object userState) {
            if ((this.getEmpDP1OperationCompleted == null)) {
                this.getEmpDP1OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmpDP1OperationCompleted);
            }
            this.InvokeAsync("getEmpDP1", new object[] {
                        emailadd}, this.getEmpDP1OperationCompleted, userState);
        }
        
        private void OngetEmpDP1OperationCompleted(object arg) {
            if ((this.getEmpDP1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmpDP1Completed(this, new getEmpDP1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/soapserv/GetListTrxMed1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/wcfjson")]
        public listApproval_Medical[] GetListTrxMed1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userid) {
            object[] results = this.Invoke("GetListTrxMed1", new object[] {
                        userid});
            return ((listApproval_Medical[])(results[0]));
        }
        
        /// <remarks/>
        public void GetListTrxMed1Async(string userid) {
            this.GetListTrxMed1Async(userid, null);
        }
        
        /// <remarks/>
        public void GetListTrxMed1Async(string userid, object userState) {
            if ((this.GetListTrxMed1OperationCompleted == null)) {
                this.GetListTrxMed1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListTrxMed1OperationCompleted);
            }
            this.InvokeAsync("GetListTrxMed1", new object[] {
                        userid}, this.GetListTrxMed1OperationCompleted, userState);
        }
        
        private void OnGetListTrxMed1OperationCompleted(object arg) {
            if ((this.GetListTrxMed1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListTrxMed1Completed(this, new GetListTrxMed1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/soapserv/CreateTicketHD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateTicketHD([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string logid1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fullname1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string type1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string relatedept1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string category1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string subcat1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string desc1) {
            this.Invoke("CreateTicketHD", new object[] {
                        logid1,
                        fullname1,
                        type1,
                        relatedept1,
                        category1,
                        subcat1,
                        desc1});
        }
        
        /// <remarks/>
        public void CreateTicketHDAsync(string logid1, string fullname1, string type1, string relatedept1, string category1, string subcat1, string desc1) {
            this.CreateTicketHDAsync(logid1, fullname1, type1, relatedept1, category1, subcat1, desc1, null);
        }
        
        /// <remarks/>
        public void CreateTicketHDAsync(string logid1, string fullname1, string type1, string relatedept1, string category1, string subcat1, string desc1, object userState) {
            if ((this.CreateTicketHDOperationCompleted == null)) {
                this.CreateTicketHDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTicketHDOperationCompleted);
            }
            this.InvokeAsync("CreateTicketHD", new object[] {
                        logid1,
                        fullname1,
                        type1,
                        relatedept1,
                        category1,
                        subcat1,
                        desc1}, this.CreateTicketHDOperationCompleted, userState);
        }
        
        private void OnCreateTicketHDOperationCompleted(object arg) {
            if ((this.CreateTicketHDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTicketHDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/soapserv/submit2approval1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void submit2approval1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string idrec, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string typeApproval) {
            this.Invoke("submit2approval1", new object[] {
                        idrec,
                        typeApproval});
        }
        
        /// <remarks/>
        public void submit2approval1Async(string idrec, string typeApproval) {
            this.submit2approval1Async(idrec, typeApproval, null);
        }
        
        /// <remarks/>
        public void submit2approval1Async(string idrec, string typeApproval, object userState) {
            if ((this.submit2approval1OperationCompleted == null)) {
                this.submit2approval1OperationCompleted = new System.Threading.SendOrPostCallback(this.Onsubmit2approval1OperationCompleted);
            }
            this.InvokeAsync("submit2approval1", new object[] {
                        idrec,
                        typeApproval}, this.submit2approval1OperationCompleted, userState);
        }
        
        private void Onsubmit2approval1OperationCompleted(object arg) {
            if ((this.submit2approval1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.submit2approval1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/soapserv/GetEmpProfile1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/wcfjson")]
        public empProfile[] GetEmpProfile1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userid) {
            object[] results = this.Invoke("GetEmpProfile1", new object[] {
                        userid});
            return ((empProfile[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmpProfile1Async(string userid) {
            this.GetEmpProfile1Async(userid, null);
        }
        
        /// <remarks/>
        public void GetEmpProfile1Async(string userid, object userState) {
            if ((this.GetEmpProfile1OperationCompleted == null)) {
                this.GetEmpProfile1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmpProfile1OperationCompleted);
            }
            this.InvokeAsync("GetEmpProfile1", new object[] {
                        userid}, this.GetEmpProfile1OperationCompleted, userState);
        }
        
        private void OnGetEmpProfile1OperationCompleted(object arg) {
            if ((this.GetEmpProfile1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmpProfile1Completed(this, new GetEmpProfile1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/soapserv/validDateCICO1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void validDateCICO1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string date1, out bool validDateCICO1Result, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool validDateCICO1ResultSpecified) {
            object[] results = this.Invoke("validDateCICO1", new object[] {
                        date1});
            validDateCICO1Result = ((bool)(results[0]));
            validDateCICO1ResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void validDateCICO1Async(string date1) {
            this.validDateCICO1Async(date1, null);
        }
        
        /// <remarks/>
        public void validDateCICO1Async(string date1, object userState) {
            if ((this.validDateCICO1OperationCompleted == null)) {
                this.validDateCICO1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidDateCICO1OperationCompleted);
            }
            this.InvokeAsync("validDateCICO1", new object[] {
                        date1}, this.validDateCICO1OperationCompleted, userState);
        }
        
        private void OnvalidDateCICO1OperationCompleted(object arg) {
            if ((this.validDateCICO1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validDateCICO1Completed(this, new validDateCICO1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/soapserv/cekOnleave1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/wcfjson")]
        public cekOnleave[] cekOnleave1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nrp, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string datefrom, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dateto) {
            object[] results = this.Invoke("cekOnleave1", new object[] {
                        nrp,
                        datefrom,
                        dateto});
            return ((cekOnleave[])(results[0]));
        }
        
        /// <remarks/>
        public void cekOnleave1Async(string nrp, string datefrom, string dateto) {
            this.cekOnleave1Async(nrp, datefrom, dateto, null);
        }
        
        /// <remarks/>
        public void cekOnleave1Async(string nrp, string datefrom, string dateto, object userState) {
            if ((this.cekOnleave1OperationCompleted == null)) {
                this.cekOnleave1OperationCompleted = new System.Threading.SendOrPostCallback(this.OncekOnleave1OperationCompleted);
            }
            this.InvokeAsync("cekOnleave1", new object[] {
                        nrp,
                        datefrom,
                        dateto}, this.cekOnleave1OperationCompleted, userState);
        }
        
        private void OncekOnleave1OperationCompleted(object arg) {
            if ((this.cekOnleave1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cekOnleave1Completed(this, new cekOnleave1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/soapserv/getDateServ1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getDateServ1() {
            object[] results = this.Invoke("getDateServ1", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDateServ1Async() {
            this.getDateServ1Async(null);
        }
        
        /// <remarks/>
        public void getDateServ1Async(object userState) {
            if ((this.getDateServ1OperationCompleted == null)) {
                this.getDateServ1OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDateServ1OperationCompleted);
            }
            this.InvokeAsync("getDateServ1", new object[0], this.getDateServ1OperationCompleted, userState);
        }
        
        private void OngetDateServ1OperationCompleted(object arg) {
            if ((this.getDateServ1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDateServ1Completed(this, new getDateServ1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/soapserv/subCicofg1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void subCicofg1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nrp, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string datefrom, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string timefrom, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string type, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lat1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lon1, out bool subCicofg1Result, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool subCicofg1ResultSpecified) {
            object[] results = this.Invoke("subCicofg1", new object[] {
                        nrp,
                        datefrom,
                        timefrom,
                        type,
                        lat1,
                        lon1});
            subCicofg1Result = ((bool)(results[0]));
            subCicofg1ResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void subCicofg1Async(string nrp, string datefrom, string timefrom, string type, string lat1, string lon1) {
            this.subCicofg1Async(nrp, datefrom, timefrom, type, lat1, lon1, null);
        }
        
        /// <remarks/>
        public void subCicofg1Async(string nrp, string datefrom, string timefrom, string type, string lat1, string lon1, object userState) {
            if ((this.subCicofg1OperationCompleted == null)) {
                this.subCicofg1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubCicofg1OperationCompleted);
            }
            this.InvokeAsync("subCicofg1", new object[] {
                        nrp,
                        datefrom,
                        timefrom,
                        type,
                        lat1,
                        lon1}, this.subCicofg1OperationCompleted, userState);
        }
        
        private void OnsubCicofg1OperationCompleted(object arg) {
            if ((this.subCicofg1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subCicofg1Completed(this, new subCicofg1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/soapserv/validFG", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void validFG([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nrp1, out bool validFGResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool validFGResultSpecified) {
            object[] results = this.Invoke("validFG", new object[] {
                        nrp1});
            validFGResult = ((bool)(results[0]));
            validFGResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void validFGAsync(string nrp1) {
            this.validFGAsync(nrp1, null);
        }
        
        /// <remarks/>
        public void validFGAsync(string nrp1, object userState) {
            if ((this.validFGOperationCompleted == null)) {
                this.validFGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidFGOperationCompleted);
            }
            this.InvokeAsync("validFG", new object[] {
                        nrp1}, this.validFGOperationCompleted, userState);
        }
        
        private void OnvalidFGOperationCompleted(object arg) {
            if ((this.validFGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validFGCompleted(this, new validFGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/soapserv/GetLastActCICOWFH1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/wcfjson")]
        public LastActCICOWFH[] GetLastActCICOWFH1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nrp1) {
            object[] results = this.Invoke("GetLastActCICOWFH1", new object[] {
                        nrp1});
            return ((LastActCICOWFH[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLastActCICOWFH1Async(string nrp1) {
            this.GetLastActCICOWFH1Async(nrp1, null);
        }
        
        /// <remarks/>
        public void GetLastActCICOWFH1Async(string nrp1, object userState) {
            if ((this.GetLastActCICOWFH1OperationCompleted == null)) {
                this.GetLastActCICOWFH1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastActCICOWFH1OperationCompleted);
            }
            this.InvokeAsync("GetLastActCICOWFH1", new object[] {
                        nrp1}, this.GetLastActCICOWFH1OperationCompleted, userState);
        }
        
        private void OnGetLastActCICOWFH1OperationCompleted(object arg) {
            if ((this.GetLastActCICOWFH1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastActCICOWFH1Completed(this, new GetLastActCICOWFH1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/soapserv/CheckEmployeeLocationSOAP1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CheckEmployeeLocationSOAP1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nrp1) {
            object[] results = this.Invoke("CheckEmployeeLocationSOAP1", new object[] {
                        nrp1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckEmployeeLocationSOAP1Async(string nrp1) {
            this.CheckEmployeeLocationSOAP1Async(nrp1, null);
        }
        
        /// <remarks/>
        public void CheckEmployeeLocationSOAP1Async(string nrp1, object userState) {
            if ((this.CheckEmployeeLocationSOAP1OperationCompleted == null)) {
                this.CheckEmployeeLocationSOAP1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckEmployeeLocationSOAP1OperationCompleted);
            }
            this.InvokeAsync("CheckEmployeeLocationSOAP1", new object[] {
                        nrp1}, this.CheckEmployeeLocationSOAP1OperationCompleted, userState);
        }
        
        private void OnCheckEmployeeLocationSOAP1OperationCompleted(object arg) {
            if ((this.CheckEmployeeLocationSOAP1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckEmployeeLocationSOAP1Completed(this, new CheckEmployeeLocationSOAP1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/soapserv/cekCicoWFH1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void cekCicoWFH1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nrp, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string datefrom, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string type, out bool cekCicoWFH1Result, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool cekCicoWFH1ResultSpecified) {
            object[] results = this.Invoke("cekCicoWFH1", new object[] {
                        nrp,
                        datefrom,
                        type});
            cekCicoWFH1Result = ((bool)(results[0]));
            cekCicoWFH1ResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void cekCicoWFH1Async(string nrp, string datefrom, string type) {
            this.cekCicoWFH1Async(nrp, datefrom, type, null);
        }
        
        /// <remarks/>
        public void cekCicoWFH1Async(string nrp, string datefrom, string type, object userState) {
            if ((this.cekCicoWFH1OperationCompleted == null)) {
                this.cekCicoWFH1OperationCompleted = new System.Threading.SendOrPostCallback(this.OncekCicoWFH1OperationCompleted);
            }
            this.InvokeAsync("cekCicoWFH1", new object[] {
                        nrp,
                        datefrom,
                        type}, this.cekCicoWFH1OperationCompleted, userState);
        }
        
        private void OncekCicoWFH1OperationCompleted(object arg) {
            if ((this.cekCicoWFH1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cekCicoWFH1Completed(this, new cekCicoWFH1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/wcfjson")]
    public partial class listApproval_Medical {
        
        private string amountField;
        
        private string createdateField;
        
        private string diagnosaField;
        
        private string flgupdateField;
        
        private string fullnameField;
        
        private string idtrxField;
        
        private string kodeklaimField;
        
        private string limitmedicalField;
        
        private string namapasienField;
        
        private string onrequestField;
        
        private string reason1Field;
        
        private string receiptdateField;
        
        private string sisaamountField;
        
        private string statusapprovalField;
        
        private string step1Field;
        
        private string tglapproval1Field;
        
        private string tglapproval2Field;
        
        private string usedamountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string createdate {
            get {
                return this.createdateField;
            }
            set {
                this.createdateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string diagnosa {
            get {
                return this.diagnosaField;
            }
            set {
                this.diagnosaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string flgupdate {
            get {
                return this.flgupdateField;
            }
            set {
                this.flgupdateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fullname {
            get {
                return this.fullnameField;
            }
            set {
                this.fullnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string idtrx {
            get {
                return this.idtrxField;
            }
            set {
                this.idtrxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string kodeklaim {
            get {
                return this.kodeklaimField;
            }
            set {
                this.kodeklaimField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string limitmedical {
            get {
                return this.limitmedicalField;
            }
            set {
                this.limitmedicalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string namapasien {
            get {
                return this.namapasienField;
            }
            set {
                this.namapasienField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string onrequest {
            get {
                return this.onrequestField;
            }
            set {
                this.onrequestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string reason1 {
            get {
                return this.reason1Field;
            }
            set {
                this.reason1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string receiptdate {
            get {
                return this.receiptdateField;
            }
            set {
                this.receiptdateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sisaamount {
            get {
                return this.sisaamountField;
            }
            set {
                this.sisaamountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string statusapproval {
            get {
                return this.statusapprovalField;
            }
            set {
                this.statusapprovalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string step1 {
            get {
                return this.step1Field;
            }
            set {
                this.step1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string tglapproval1 {
            get {
                return this.tglapproval1Field;
            }
            set {
                this.tglapproval1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string tglapproval2 {
            get {
                return this.tglapproval2Field;
            }
            set {
                this.tglapproval2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string usedamount {
            get {
                return this.usedamountField;
            }
            set {
                this.usedamountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/wcfjson")]
    public partial class LastActCICOWFH {
        
        private string actwfh1Field;
        
        private string datecicowfh1Field;
        
        private string idtrx1Field;
        
        private string nrp1Field;
        
        private string timecicowfh1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string actwfh1 {
            get {
                return this.actwfh1Field;
            }
            set {
                this.actwfh1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string datecicowfh1 {
            get {
                return this.datecicowfh1Field;
            }
            set {
                this.datecicowfh1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string idtrx1 {
            get {
                return this.idtrx1Field;
            }
            set {
                this.idtrx1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string nrp1 {
            get {
                return this.nrp1Field;
            }
            set {
                this.nrp1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string timecicowfh1 {
            get {
                return this.timecicowfh1Field;
            }
            set {
                this.timecicowfh1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/wcfjson")]
    public partial class cekOnleave {
        
        private bool flgTrxField;
        
        private bool flgTrxFieldSpecified;
        
        private short numOnleaveField;
        
        private bool numOnleaveFieldSpecified;
        
        /// <remarks/>
        public bool flgTrx {
            get {
                return this.flgTrxField;
            }
            set {
                this.flgTrxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool flgTrxSpecified {
            get {
                return this.flgTrxFieldSpecified;
            }
            set {
                this.flgTrxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public short numOnleave {
            get {
                return this.numOnleaveField;
            }
            set {
                this.numOnleaveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numOnleaveSpecified {
            get {
                return this.numOnleaveFieldSpecified;
            }
            set {
                this.numOnleaveFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/wcfjson")]
    public partial class empProfile {
        
        private string displaynameField;
        
        private string emailaddField;
        
        private string golField;
        
        private string locationField;
        
        private string nrpField;
        
        private int remaincutibesarField;
        
        private bool remaincutibesarFieldSpecified;
        
        private int remaincutitahunanField;
        
        private bool remaincutitahunanFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string displayname {
            get {
                return this.displaynameField;
            }
            set {
                this.displaynameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string emailadd {
            get {
                return this.emailaddField;
            }
            set {
                this.emailaddField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string gol {
            get {
                return this.golField;
            }
            set {
                this.golField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string nrp {
            get {
                return this.nrpField;
            }
            set {
                this.nrpField = value;
            }
        }
        
        /// <remarks/>
        public int remaincutibesar {
            get {
                return this.remaincutibesarField;
            }
            set {
                this.remaincutibesarField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool remaincutibesarSpecified {
            get {
                return this.remaincutibesarFieldSpecified;
            }
            set {
                this.remaincutibesarFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int remaincutitahunan {
            get {
                return this.remaincutitahunanField;
            }
            set {
                this.remaincutitahunanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool remaincutitahunanSpecified {
            get {
                return this.remaincutitahunanFieldSpecified;
            }
            set {
                this.remaincutitahunanFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void authUserCompletedEventHandler(object sender, authUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal authUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool authUserResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool authUserResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void authUser64CompletedEventHandler(object sender, authUser64CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authUser64CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal authUser64CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool authUser64Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool authUser64ResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void cekAttendance1CompletedEventHandler(object sender, cekAttendance1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cekAttendance1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cekAttendance1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool cekAttendance1Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool cekAttendance1ResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void subAttendance1CompletedEventHandler(object sender, subAttendance1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class subAttendance1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal subAttendance1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool subAttendance1Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool subAttendance1ResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void cekCico1CompletedEventHandler(object sender, cekCico1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cekCico1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cekCico1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool cekCico1Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool cekCico1ResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void cekCico2CompletedEventHandler(object sender, cekCico2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cekCico2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cekCico2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool cekCico2Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool cekCico2ResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void subCico1CompletedEventHandler(object sender, subCico1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class subCico1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal subCico1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool subCico1Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool subCico1ResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ApprovalMedTrx1CompletedEventHandler(object sender, ApprovalMedTrx1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApprovalMedTrx1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApprovalMedTrx1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool ApprovalMedTrx1Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool ApprovalMedTrx1ResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void getEmpDP1CompletedEventHandler(object sender, getEmpDP1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmpDP1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmpDP1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetListTrxMed1CompletedEventHandler(object sender, GetListTrxMed1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListTrxMed1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListTrxMed1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public listApproval_Medical[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((listApproval_Medical[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateTicketHDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void submit2approval1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetEmpProfile1CompletedEventHandler(object sender, GetEmpProfile1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmpProfile1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmpProfile1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public empProfile[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((empProfile[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void validDateCICO1CompletedEventHandler(object sender, validDateCICO1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validDateCICO1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validDateCICO1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool validDateCICO1Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool validDateCICO1ResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void cekOnleave1CompletedEventHandler(object sender, cekOnleave1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cekOnleave1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cekOnleave1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cekOnleave[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cekOnleave[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void getDateServ1CompletedEventHandler(object sender, getDateServ1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDateServ1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDateServ1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void subCicofg1CompletedEventHandler(object sender, subCicofg1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class subCicofg1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal subCicofg1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool subCicofg1Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool subCicofg1ResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void validFGCompletedEventHandler(object sender, validFGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validFGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validFGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool validFGResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool validFGResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetLastActCICOWFH1CompletedEventHandler(object sender, GetLastActCICOWFH1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastActCICOWFH1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastActCICOWFH1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LastActCICOWFH[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LastActCICOWFH[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CheckEmployeeLocationSOAP1CompletedEventHandler(object sender, CheckEmployeeLocationSOAP1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckEmployeeLocationSOAP1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckEmployeeLocationSOAP1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void cekCicoWFH1CompletedEventHandler(object sender, cekCicoWFH1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cekCicoWFH1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cekCicoWFH1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool cekCicoWFH1Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool cekCicoWFH1ResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591